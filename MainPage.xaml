<Page
    x:Class="JevoGastosUWP.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:JevoGastosUWP"
    xmlns:PScontrols="using:JevoGastosUWP.ControlesPersonalizados"
    xmlns:core="using:JevoGastosCore.Model"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:converters="using:JevoGastosUWP.Converters" 
    xmlns:aux="using:JevoGastosUWP.Auxiliares"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary Source="/ResourceDictionaries/MainPageDictionaries/Dark.xaml" x:Key="Dark"/>
                <ResourceDictionary Source="/ResourceDictionaries/MainPageDictionaries/Light.xaml" x:Key="Light"/>
            </ResourceDictionary.ThemeDictionaries>
            <Style TargetType="ListViewItem" x:Key="ContentStretched_Items">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <ListViewItemPresenter ContentTransitions="{TemplateBinding ContentTransitions}"
                        x:Name="Root"
                        Control.IsTemplateFocusTarget="True"
                        FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                        SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}"
                        CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                        CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                        DragBackground="{ThemeResource ListViewItemDragBackground}"
                        DragForeground="{ThemeResource ListViewItemDragForeground}"
                        FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                        FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                        PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                        PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
                        PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                        SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}"
                        SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                        SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"
                        PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
                        SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}"
                        DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                        DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                        ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        ContentMargin="{TemplateBinding Padding}"
                        CheckMode="{ThemeResource ListViewItemCheckMode}"
                        RevealBackground="{ThemeResource ListViewItemRevealBackground}"
                        RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}"
                        RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}"
                        RevealBackgroundShowsAboveContent="True">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Selected" />

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PointerOverSelected">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverPressed">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PressedSelected">
                                            <VisualState.Setters>
                                                <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled" />

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="Root.RevealBorderThickness" Value="0" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                            </ListViewItemPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="FlyoutFlyoutPresenterStyleNoPadding" TargetType="FlyoutPresenter">
                <Setter Property="RequestedTheme" Value="Default"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}"/>
                <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundChromeHighBrush}"/>
                <Setter Property="BorderThickness" Value="{ThemeResource FlyoutBorderThemeThickness}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="MinWidth" Value="{ThemeResource FlyoutThemeMinWidth}"/>
                <Setter Property="MaxWidth" Value="{ThemeResource FlyoutThemeMaxWidth}"/>
                <Setter Property="MinHeight" Value="{ThemeResource FlyoutThemeMinHeight}"/>
                <Setter Property="MaxHeight" Value="{ThemeResource FlyoutThemeMaxHeight}"/>
                <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="FlyoutPresenter">
                            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer x:Name="ScrollViewer" AutomationProperties.AccessibilityView="Raw" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="EtiquetaFormStyle" TargetType="PScontrols:AddEtiquetaForm">
                <Setter Property="HeaderBackground" Value="{ThemeResource Brush_Accent2Background}"/>
                <Setter Property="HeaderForeground" Value="{ThemeResource Brush_Accent2Foreground}"/>
                <Setter Property="Width" Value="{StaticResource	FlyoutThemeTouchMinWidth}"/>
                <Setter Property="Container" Value="{x:Bind Container}"/>
                <Setter Property="ErrorText" Value="El nombre ya existe."/>
                <Setter Property="Background" Value="{ThemeResource AppBarBackgroundThemeBrush}"/>
                <Setter Property="BorderBrush" Value="{ThemeResource Brush_PopupBorder}"/>
                <Setter Property="BorderThickness" Value="{ThemeResource Thickness_PopupThickness}"/>
            </Style>
            <converters:DoubleToCurrency x:Key="doubletocurrency"/>
            <converters:NotGate x:Key="notgate"/>
        </ResourceDictionary>
    </Page.Resources>
    <Grid RowSpacing="8" Background="{ThemeResource Brush_AppBackground1}">
        <!--#region Configuracion-->
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <!--#endregion-->
        <Grid
            Grid.Row="0"
            ColumnSpacing="8"
            RowSpacing="4"
            Margin="16 16 16 4"
            >
            <!--#region Congiguración-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="256"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.Resources>
                <DataTemplate x:Name="ListTemplate" x:DataType="x:String">
                    <Border HorizontalAlignment="Stretch" Background="{ThemeResource Brush_Accent3Background}" Padding="4" CornerRadius="4 4 0 0">
                        <TextBlock 
                            Text="{Binding}" 
                            Foreground="{ThemeResource Brush_Accent3Foreground}" 
                            HorizontalAlignment="Stretch" 
                            HorizontalTextAlignment="Center" 
                            FontWeight="Bold"/>
                    </Border>
                </DataTemplate>
                <DataTemplate x:Name="EtiquetaTemplate" x:DataType="core:Etiqueta">
                    <Grid HorizontalAlignment="Stretch">
                        <!--#region Configuración-->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <!--#endregion-->
                        <TextBlock Text="{x:Bind Path=Name}"/>
                        <TextBlock Text="{x:Bind Path=Total,Converter={StaticResource doubletocurrency}}" Grid.Column="1" TextAlignment="Right"/>
                    </Grid>
                </DataTemplate>
                <Style TargetType="ListView">
                    <Setter Property="ItemContainerStyle" Value="{StaticResource ContentStretched_Items}"/>
                    <Setter Property="SelectionMode" Value="None"/>
                    <Setter Property="CornerRadius" Value="0 0 4 4"/>
                    <Setter Property="Background" Value="{ThemeResource Brush_ListViewBackground}"/>
                </Style>
            </Grid.Resources>
            <!--#endregion-->
            <Grid
                Grid.Row="0"
                >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <ContentPresenter x:Uid="ingresos" ContentTemplate="{StaticResource ListTemplate}" Content="Ingresos"/>
                <ListView 
                    x:Name="LV_Ingresos"
                    Grid.Row="1"
                    ItemsSource="{x:Bind Ingresos}"
                    ItemTemplate="{StaticResource EtiquetaTemplate}"
                    ContainerContentChanging="LV_ContainerContentChanging"
                    />
            </Grid>
            <Grid
                Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <ContentPresenter x:Uid="cuentas" ContentTemplate="{StaticResource ListTemplate}" Content="Cuentas"/>
                <ListView
                    x:Name="LV_Cuentas"
                    ItemsSource="{x:Bind Cuentas}"
                    Grid.Row="1"
                    ItemTemplate="{StaticResource EtiquetaTemplate}"
                    ContainerContentChanging="LV_ContainerContentChanging"/>
            </Grid>
            <Grid
                Grid.Row="2"
                >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <ContentPresenter x:Uid="gastos" ContentTemplate="{StaticResource ListTemplate}" Content="Gastos"/>
                <ListView
                    x:Name="LV_Gastos"
                    Grid.Row="1"
                    ItemsSource="{x:Bind Gastos}"
                    ItemTemplate="{StaticResource EtiquetaTemplate}" 
                    ContainerContentChanging="LV_ContainerContentChanging"
                />
            </Grid>
            <Grid
                Grid.Column="1"
                Grid.RowSpan="3"
                >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <ContentPresenter ContentTemplate="{StaticResource ListTemplate}" Content="Transacciones"/>
                <ListView
                    x:Name="LV_Transacciones"
                    Grid.Row="1"
                    ItemsSource="{x:Bind Transacciones}"
                    ContainerContentChanging="LV_Transacciones_ContainerContentChanging"/>
            </Grid>
        </Grid>
        <CommandBar 
            DefaultLabelPosition="Right" 
            ClosedDisplayMode="Compact" 
            OverflowButtonVisibility="Auto" 
            IsDynamicOverflowEnabled="True"
            Background="{ThemeResource Brush_Accent1Background}"
            Grid.Row="1"
            >
            <CommandBar.Resources>
                <Style TargetType="AppBarButton" x:Key="DefaultStyle" BasedOn="{StaticResource AppBarButtonRevealLabelsOnRightStyle}">
                    <Setter Property="Foreground" Value="{ThemeResource Brush_Accent1Foreground}"/>
                </Style>
            </CommandBar.Resources>
            <AppBarButton x:Name="ABB_AddTrans" Label="Transacción" x:Uid="transaccion" AllowFocusOnInteraction="True" Style="{StaticResource DefaultStyle}" RequestedTheme="Dark">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="T" Modifiers="Menu"/>
                </AppBarButton.KeyboardAccelerators>
                <AppBarButton.Icon>
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE710;"/>
                </AppBarButton.Icon>
                <AppBarButton.Flyout>
                    <Flyout FlyoutPresenterStyle="{StaticResource FlyoutFlyoutPresenterStyleNoPadding}" Closing="AddTransFlyout_Closing">
                        <StackPanel x:Name="SP_AddTransaccion" Width="{StaticResource	FlyoutThemeTouchMinWidth}" CornerRadius="4">
                            <Border Background="{ThemeResource Brush_Accent2Background}" Padding="8">
                                <TextBlock x:Uid="nuevatransaccion" Foreground="{ThemeResource Brush_Accent2Foreground}" Text="Nueva transacción" TextAlignment="Center"/>
                            </Border>
                            <StackPanel x:Name="SP_TransForm" Margin="8">
                                <ComboBox x:Name="CB_Tipo" x:Uid="CB_tipo" Header="Tipo" HorizontalAlignment="Stretch" SelectionChanged="CB_TipoSelected" PlaceholderText="Seleccionar tipo">
                                    <x:String>Entrada</x:String>
                                    <x:String>Movimiento</x:String>
                                    <x:String>Salida</x:String>
                                </ComboBox>
                                <CalendarDatePicker x:Name="CDP_Fecha" Header="Fecha" HorizontalAlignment="Stretch" Visibility="{x:Bind TipoSelected.Visibility,Mode=OneWay}" DateChanged="CDP_Fecha_DateChanged"/>
                                <Grid Visibility="{x:Bind TipoSelected.Visibility,Mode=OneWay}">
                                    <StackPanel Spacing="4">
                                        <TextBlock Text="Origen" HorizontalAlignment="Stretch"/>
                                        <ComboBox x:Name="CB_Origen" HorizontalAlignment="Stretch" SelectionChanged="CB_Origen_SelectionChanged" Visibility="{x:Bind TheresOrigenes.Visibility,Mode=OneWay}"/>
                                        <Button x:Name="B_Origen" Click="B_Origen_Click" Content="Clickme" HorizontalAlignment="Stretch" Visibility="{x:Bind TheresOrigenes.Visibility,Mode=OneWay,Converter={StaticResource notgate}}"/>
                                    </StackPanel>
                                    
                                </Grid>
                                <Grid Visibility="{x:Bind TipoSelected.Visibility,Mode=OneWay}">
                                    <StackPanel Spacing="4">
                                        <TextBlock Text="Destino" HorizontalAlignment="Stretch"/>
                                        <ComboBox x:Name="CB_Destino" HorizontalAlignment="Stretch" SelectionChanged="CB_Origen_SelectionChanged" Visibility="{x:Bind TheresDestinos.Visibility,Mode=OneWay}"/>
                                        <Button x:Name="B_Destino" Click="B_Destino_Click" Content="Clickme" HorizontalAlignment="Stretch" Visibility="{x:Bind TheresDestinos.Visibility,Mode=OneWay,Converter={StaticResource notgate}}"/>
                                    </StackPanel>
                                </Grid>
                                
                                <muxc:NumberBox 
                                    x:Name="TB_Valor" 
                                    Header="Valor" 
                                    PlaceholderText="1+2^2"
                                    AcceptsExpression="True"
                                    ValidationMode="InvalidInputOverwritten"
                                    ValueChanged="TB_Valor_ValueChanged"
                                    HorizontalAlignment="Stretch" 
                                    Visibility="{x:Bind TipoSelected.Visibility,Mode=OneWay}" />
                                <TextBox x:Name="TB_Descripcion" Header="Descripción" HorizontalAlignment="Stretch" Visibility="{x:Bind TipoSelected.Visibility,Mode=OneWay}" PlaceholderText="Descripción"/>
                            </StackPanel>
                            <CommandBar DefaultLabelPosition="Right">
                                <AppBarButton x:Uid="guardar" x:Name="APB_GuardarTrans" Label="Guardar" Icon="Save" Click="AddTransaccion_Click" Visibility="{x:Bind TipoSelected.Visibility,Mode=OneWay}" IsEnabled="False">
                                    <AppBarButton.KeyboardAccelerators>
                                        <KeyboardAccelerator Key="Enter" ScopeOwner="{x:Bind SP_AddTransaccion}"/>
                                    </AppBarButton.KeyboardAccelerators>
                                </AppBarButton>
                                <AppBarButton x:Uid="cancelar" Label="Cancelar" Icon="Cancel" Click="AppBarCancelTransButton_Click">
                                    <AppBarButton.KeyboardAccelerators>
                                        <KeyboardAccelerator Key="Escape" ScopeOwner="{x:Bind SP_AddTransaccion}"/>
                                    </AppBarButton.KeyboardAccelerators>
                                </AppBarButton>
                            </CommandBar>
                        </StackPanel>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <CommandBar.SecondaryCommands>
                <AppBarButton x:Uid="ingreso" Label="Ingreso" AllowFocusOnInteraction="True" Click="ShowIngresoForm_Click">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE74B;"/>
                    </AppBarButton.Icon>
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="I" Modifiers="Menu" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton x:Uid="cuenta" Label="Cuenta" AllowFocusOnInteraction="True" Click="ShowCuentaForm_Click">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE779;"/>
                    </AppBarButton.Icon>
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="C" Modifiers="Menu" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
                <AppBarButton x:Uid="gasto" Label="Gasto" AllowFocusOnInteraction="True" Click="ShowGastoForm_Click">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE719;"/>
                    </AppBarButton.Icon>
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="G" Modifiers="Menu" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
            </CommandBar.SecondaryCommands>
        </CommandBar>
        <!--#region Dialogs & Popups-->
        <ContentDialog
            x:Name="CD_Eliminar"
            Title="Eliminar"
            PrimaryButtonText="Sí"
            SecondaryButtonText="No"
            DefaultButton="Secondary"
            Content="Está seguro de eliminar la etiqueta"
            Grid.RowSpan="2"
            Visibility="Collapsed"/>
        <Popup
            x:Name="Popup_IngresoForm"
            IsOpen="False"
            IsLightDismissEnabled="True"
            LightDismissOverlayMode="On" 
            Grid.RowSpan="2"
            GettingFocus="{x:Bind aux:JevoVisual.GettingFocus}"
            Translation="0,0,8">
            <Popup.Shadow>
                <ThemeShadow/>
            </Popup.Shadow>
            <Popup.ChildTransitions>
                <TransitionCollection>
                    <PopupThemeTransition FromHorizontalOffset="0" FromVerticalOffset="0"/>
                </TransitionCollection>
            </Popup.ChildTransitions>
            <PScontrols:AddEtiquetaForm 
                x:Name="AEF_Ingreso"
                x:Uid="nuevoingreso"
                TipoEtiqueta="Ingreso" 
                Style="{StaticResource EtiquetaFormStyle}"
                HeaderText="Nueva fuente de ingresos"
                Click="AddIngreso_Click"
                            />
        </Popup>
        <Popup 
            x:Name="Popup_CuentaForm" 
            IsOpen="False" 
            IsLightDismissEnabled="True" 
            LightDismissOverlayMode="On" 
            Grid.RowSpan="2"
            GettingFocus="{x:Bind aux:JevoVisual.GettingFocus}"
            Translation="0,0,32"
            >
            <Popup.Shadow>
                <ThemeShadow/>
            </Popup.Shadow>
            <Popup.ChildTransitions>
                <TransitionCollection>
                    <PopupThemeTransition FromHorizontalOffset="0" FromVerticalOffset="0"/>
                </TransitionCollection>
            </Popup.ChildTransitions>
            <PScontrols:AddEtiquetaForm 
                x:Name="AEF_Cuenta" 
                x:Uid="nuevacuenta"
                TipoEtiqueta="Cuenta"
                Style="{StaticResource EtiquetaFormStyle}"
                HeaderText="Nueva cuenta"
                Click="AddCuenta_Click"
                            />
        </Popup>
        <Popup 
            x:Name="Popup_GastoForm" 
            IsOpen="False" 
            IsLightDismissEnabled="True" 
            LightDismissOverlayMode="On" 
            Grid.RowSpan="2"
            GettingFocus="{x:Bind aux:JevoVisual.GettingFocus}"
            Translation="0,0,32"
            >
            <Popup.Shadow>
                <ThemeShadow/>
            </Popup.Shadow>
            <Popup.ChildTransitions>
                <TransitionCollection>
                    <PopupThemeTransition FromHorizontalOffset="0" FromVerticalOffset="0"/>
                </TransitionCollection>
            </Popup.ChildTransitions>
            <PScontrols:AddEtiquetaForm 
                x:Name="AEF_Gasto" 
                x:Uid="nuevogasto"
                TipoEtiqueta="Gasto"
                Style="{StaticResource EtiquetaFormStyle}"
                HeaderText="Nuevo gasto"
                Click="AddGasto_Click"
                            />
        </Popup>
        <!--#endregion-->
    </Grid>
</Page>